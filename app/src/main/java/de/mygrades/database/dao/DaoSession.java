package de.mygrades.database.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import de.mygrades.database.dao.University;
import de.mygrades.database.dao.Rule;
import de.mygrades.database.dao.Action;
import de.mygrades.database.dao.ActionParam;
import de.mygrades.database.dao.TransformerMapping;
import de.mygrades.database.dao.GradeEntry;

import de.mygrades.database.dao.UniversityDao;
import de.mygrades.database.dao.RuleDao;
import de.mygrades.database.dao.ActionDao;
import de.mygrades.database.dao.ActionParamDao;
import de.mygrades.database.dao.TransformerMappingDao;
import de.mygrades.database.dao.GradeEntryDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig universityDaoConfig;
    private final DaoConfig ruleDaoConfig;
    private final DaoConfig actionDaoConfig;
    private final DaoConfig actionParamDaoConfig;
    private final DaoConfig transformerMappingDaoConfig;
    private final DaoConfig gradeEntryDaoConfig;

    private final UniversityDao universityDao;
    private final RuleDao ruleDao;
    private final ActionDao actionDao;
    private final ActionParamDao actionParamDao;
    private final TransformerMappingDao transformerMappingDao;
    private final GradeEntryDao gradeEntryDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        universityDaoConfig = daoConfigMap.get(UniversityDao.class).clone();
        universityDaoConfig.initIdentityScope(type);

        ruleDaoConfig = daoConfigMap.get(RuleDao.class).clone();
        ruleDaoConfig.initIdentityScope(type);

        actionDaoConfig = daoConfigMap.get(ActionDao.class).clone();
        actionDaoConfig.initIdentityScope(type);

        actionParamDaoConfig = daoConfigMap.get(ActionParamDao.class).clone();
        actionParamDaoConfig.initIdentityScope(type);

        transformerMappingDaoConfig = daoConfigMap.get(TransformerMappingDao.class).clone();
        transformerMappingDaoConfig.initIdentityScope(type);

        gradeEntryDaoConfig = daoConfigMap.get(GradeEntryDao.class).clone();
        gradeEntryDaoConfig.initIdentityScope(type);

        universityDao = new UniversityDao(universityDaoConfig, this);
        ruleDao = new RuleDao(ruleDaoConfig, this);
        actionDao = new ActionDao(actionDaoConfig, this);
        actionParamDao = new ActionParamDao(actionParamDaoConfig, this);
        transformerMappingDao = new TransformerMappingDao(transformerMappingDaoConfig, this);
        gradeEntryDao = new GradeEntryDao(gradeEntryDaoConfig, this);

        registerDao(University.class, universityDao);
        registerDao(Rule.class, ruleDao);
        registerDao(Action.class, actionDao);
        registerDao(ActionParam.class, actionParamDao);
        registerDao(TransformerMapping.class, transformerMappingDao);
        registerDao(GradeEntry.class, gradeEntryDao);
    }
    
    public void clear() {
        universityDaoConfig.getIdentityScope().clear();
        ruleDaoConfig.getIdentityScope().clear();
        actionDaoConfig.getIdentityScope().clear();
        actionParamDaoConfig.getIdentityScope().clear();
        transformerMappingDaoConfig.getIdentityScope().clear();
        gradeEntryDaoConfig.getIdentityScope().clear();
    }

    public UniversityDao getUniversityDao() {
        return universityDao;
    }

    public RuleDao getRuleDao() {
        return ruleDao;
    }

    public ActionDao getActionDao() {
        return actionDao;
    }

    public ActionParamDao getActionParamDao() {
        return actionParamDao;
    }

    public TransformerMappingDao getTransformerMappingDao() {
        return transformerMappingDao;
    }

    public GradeEntryDao getGradeEntryDao() {
        return gradeEntryDao;
    }

}
